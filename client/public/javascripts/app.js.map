{"version":3,"sources":["app/collections/notes.coffee","app/helpers.coffee","app/initialize.coffee","app/lib/request.coffee","app/lib/slug.coffee","app/models/models.coffee","app/models/note.coffee","app/routers/main_router.coffee","app/views/home_view.coffee","app/views/latest_view.coffee","app/views/note_view.coffee","app/views/search_view.coffee","app/views/templates/content-empty.jade","app/views/templates/editor.jade","app/views/templates/home.jade","app/views/templates/note.jade","app/views/templates/search_result.jade","app/views/templates/search_view.jade","app/views/templates/tree_buttons.jade","app/views/widgets/file_list.coffee","app/views/widgets/tree.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1FA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArxWA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnvcA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvpUA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzmBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["var Note, NotesCollection, add3Dots, getPreview, request,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nNote = require(\"models/note\").Note;\n\nrequest = require('../lib/request');\n\nadd3Dots = function(string, limit) {\n  if ((string != null ? string.length : void 0) > limit) {\n    return string.substring(1, limit - 1) + \"...\";\n  } else {\n    return string;\n  }\n};\n\ngetPreview = function(note) {\n  var converter, preview;\n  preview = add3Dots(note.content, 200);\n  converter = new Showdown.converter();\n  preview = converter.makeHtml(preview);\n  return preview;\n};\n\nNotesCollection = (function(_super) {\n\n  __extends(NotesCollection, _super);\n\n  NotesCollection.prototype.model = Note;\n\n  NotesCollection.prototype.url = 'notes/';\n\n  function NotesCollection() {\n    NotesCollection.__super__.constructor.call(this);\n  }\n\n  NotesCollection.prototype.parse = function(response) {\n    return response.rows || response;\n  };\n\n  NotesCollection.search = function(query, callback) {\n    var _this = this;\n    if (query.length > 0) {\n      return request.post('notes/search', {\n        query: query\n      }, function(err, notes) {\n        var note, results, _i, _len;\n        if (err) {\n          return alert(\"Server error occured while searching.\");\n        } else {\n          results = [];\n          for (_i = 0, _len = notes.length; _i < _len; _i++) {\n            note = notes[_i];\n            results.push(new Note(note));\n          }\n          return callback(results);\n        }\n      });\n    } else {\n      return callback([]);\n    }\n  };\n\n  return NotesCollection;\n\n})(Backbone.Collection);\n\nmodule.exports = NotesCollection;\n","\nexports.BrunchApplication = (function() {\n\n  function BrunchApplication() {\n    var _this = this;\n    $(function() {\n      _this.initialize(_this);\n      return Backbone.history.start();\n    });\n  }\n\n  BrunchApplication.prototype.initializeJQueryExtensions = function() {\n    return $.fn.spin = function(opts, color) {\n      var presets;\n      presets = {\n        tiny: {\n          lines: 8,\n          length: 2,\n          width: 1,\n          radius: 3\n        },\n        small: {\n          lines: 8,\n          length: 2,\n          width: 1,\n          radius: 5\n        },\n        large: {\n          lines: 7,\n          length: 1,\n          width: 2,\n          radius: 5\n        }\n      };\n      if (Spinner) {\n        return this.each(function() {\n          var $this, colorObj, spinner;\n          $this = $(this);\n          spinner = $this.data(\"spinner\");\n          if (spinner != null) {\n            spinner.stop();\n            return $this.data(\"spinner\", null);\n          } else if (opts !== false) {\n            if (typeof opts === \"string\") {\n              if (opts in presets) {\n                opts = presets[opts];\n              } else {\n                opts = {};\n              }\n              if (color) {\n                opts.color = color;\n              }\n            }\n            colorObj = {\n              color: $this.css(\"color\")\n            };\n            spinner = new Spinner($.extend(colorObj, opts));\n            spinner.spin(this);\n            return $this.data(\"spinner\", spinner);\n          }\n        });\n      } else {\n        throw \"Spinner class not available.\";\n        return null;\n      }\n    };\n  };\n\n  BrunchApplication.prototype.initialize = function() {\n    return null;\n  };\n\n  return BrunchApplication;\n\n})();\n\nexports.slugify = function(string) {\n  var _slugify_hyphenate_re, _slugify_strip_re;\n  _slugify_strip_re = /[^\\w\\s-]/g;\n  _slugify_hyphenate_re = /[-\\s]+/g;\n  string = string.replace(_slugify_strip_re, '').trim().toLowerCase();\n  string = string.replace(_slugify_hyphenate_re, '-');\n  return string;\n};\n\nexports.getPathRegExp = function(path) {\n  var slashReg;\n  slashReg = new RegExp(\"/\", \"g\");\n  return \"^\" + (path.replace(slashReg, \"\\/\"));\n};\n","var BrunchApplication, HomeView, MainRouter,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBrunchApplication = require('helpers').BrunchApplication;\n\nMainRouter = require('routers/main_router').MainRouter;\n\nHomeView = require('views/home_view').HomeView;\n\nexports.Application = (function(_super) {\n\n  __extends(Application, _super);\n\n  function Application() {\n    return Application.__super__.constructor.apply(this, arguments);\n  }\n\n  Application.prototype.initialize = function() {\n    this.initializeJQueryExtensions();\n    this.homeView = new HomeView;\n    this.homeView.render();\n    return this.router = new MainRouter;\n  };\n\n  return Application;\n\n})(BrunchApplication);\n\nwindow.app = new exports.Application;\n","\nexports.request = function(type, url, data, callback) {\n  return $.ajax({\n    type: type,\n    url: url,\n    data: data != null ? JSON.stringify(data) : null,\n    contentType: data != null ? \"application/json\" : null,\n    success: function(data) {\n      if (callback != null) {\n        return callback(null, data);\n      }\n    },\n    error: function() {\n      if ((data.msg != null) && (callback != null)) {\n        return callback(new Error(data.msg));\n      } else if (callback != null) {\n        return callback(new Error(\"Server error occured\"));\n      }\n    }\n  });\n};\n\nexports.get = function(url, callbacks) {\n  return exports.request(\"GET\", url, null, callbacks);\n};\n\nexports.post = function(url, data, callbacks) {\n  return exports.request(\"POST\", url, data, callbacks);\n};\n\nexports.put = function(url, data, callbacks) {\n  return exports.request(\"PUT\", url, data, callbacks);\n};\n\nexports.del = function(url, callbacks) {\n  return exports.request(\"DELETE\", url, null, callbacks);\n};\n","var char_map, removelist, slug, word;\n\nremovelist = ['sign', 'cross', 'of', 'symbol', 'staff'];\n\nremovelist = (function() {\n  var _i, _len, _results;\n  _results = [];\n  for (_i = 0, _len = removelist.length; _i < _len; _i++) {\n    word = removelist[_i];\n    _results.push(new RegExp(word, 'gi'));\n  }\n  return _results;\n})();\n\nchar_map = {\n  'À': 'A',\n  'Á': 'A',\n  'Â': 'A',\n  'Ã': 'A',\n  'Ä': 'A',\n  'Å': 'A',\n  'Æ': 'AE',\n  'Ç': 'C',\n  'È': 'E',\n  'É': 'E',\n  'Ê': 'E',\n  'Ë': 'E',\n  'Ì': 'I',\n  'Í': 'I',\n  'Î': 'I',\n  'Ï': 'I',\n  'Ð': 'D',\n  'Ñ': 'N',\n  'Ò': 'O',\n  'Ó': 'O',\n  'Ô': 'O',\n  'Õ': 'O',\n  'Ö': 'O',\n  'Ő': 'O',\n  'Ø': 'O',\n  'Ù': 'U',\n  'Ú': 'U',\n  'Û': 'U',\n  'Ü': 'U',\n  'Ű': 'U',\n  'Ý': 'Y',\n  'Þ': 'TH',\n  'ß': 'ss',\n  'à': 'a',\n  'á': 'a',\n  'â': 'a',\n  'ã': 'a',\n  'ä': 'a',\n  'å': 'a',\n  'æ': 'ae',\n  'ç': 'c',\n  'è': 'e',\n  'é': 'e',\n  'ê': 'e',\n  'ë': 'e',\n  'ì': 'i',\n  'í': 'i',\n  'î': 'i',\n  'ï': 'i',\n  'ð': 'd',\n  'ñ': 'n',\n  'ò': 'o',\n  'ó': 'o',\n  'ô': 'o',\n  'õ': 'o',\n  'ö': 'o',\n  'ő': 'o',\n  'ø': 'o',\n  'ù': 'u',\n  'ú': 'u',\n  'û': 'u',\n  'ü': 'u',\n  'ű': 'u',\n  'ý': 'y',\n  'þ': 'th',\n  'ÿ': 'y',\n  'ẞ': 'SS',\n  'α': 'a',\n  'β': 'b',\n  'γ': 'g',\n  'δ': 'd',\n  'ε': 'e',\n  'ζ': 'z',\n  'η': 'h',\n  'θ': '8',\n  'ι': 'i',\n  'κ': 'k',\n  'λ': 'l',\n  'μ': 'm',\n  'ν': 'n',\n  'ξ': '3',\n  'ο': 'o',\n  'π': 'p',\n  'ρ': 'r',\n  'σ': 's',\n  'τ': 't',\n  'υ': 'y',\n  'φ': 'f',\n  'χ': 'x',\n  'ψ': 'ps',\n  'ω': 'w',\n  'ά': 'a',\n  'έ': 'e',\n  'ί': 'i',\n  'ό': 'o',\n  'ύ': 'y',\n  'ή': 'h',\n  'ώ': 'w',\n  'ς': 's',\n  'ϊ': 'i',\n  'ΰ': 'y',\n  'ϋ': 'y',\n  'ΐ': 'i',\n  'Α': 'A',\n  'Β': 'B',\n  'Γ': 'G',\n  'Δ': 'D',\n  'Ε': 'E',\n  'Ζ': 'Z',\n  'Η': 'H',\n  'Θ': '8',\n  'Ι': 'I',\n  'Κ': 'K',\n  'Λ': 'L',\n  'Μ': 'M',\n  'Ν': 'N',\n  'Ξ': '3',\n  'Ο': 'O',\n  'Π': 'P',\n  'Ρ': 'R',\n  'Σ': 'S',\n  'Τ': 'T',\n  'Υ': 'Y',\n  'Φ': 'F',\n  'Χ': 'X',\n  'Ψ': 'PS',\n  'Ω': 'W',\n  'Ά': 'A',\n  'Έ': 'E',\n  'Ί': 'I',\n  'Ό': 'O',\n  'Ύ': 'Y',\n  'Ή': 'H',\n  'Ώ': 'W',\n  'Ϊ': 'I',\n  'Ϋ': 'Y',\n  'ş': 's',\n  'Ş': 'S',\n  'ı': 'i',\n  'İ': 'I',\n  'ğ': 'g',\n  'Ğ': 'G',\n  'а': 'a',\n  'б': 'b',\n  'в': 'v',\n  'г': 'g',\n  'д': 'd',\n  'е': 'e',\n  'ё': 'yo',\n  'ж': 'zh',\n  'з': 'z',\n  'и': 'i',\n  'й': 'j',\n  'к': 'k',\n  'л': 'l',\n  'м': 'm',\n  'н': 'n',\n  'о': 'o',\n  'п': 'p',\n  'р': 'r',\n  'с': 's',\n  'т': 't',\n  'у': 'u',\n  'ф': 'f',\n  'х': 'h',\n  'ц': 'c',\n  'ч': 'ch',\n  'ш': 'sh',\n  'щ': 'sh',\n  'ъ': 'u',\n  'ы': 'y',\n  'ь': '',\n  'э': 'e',\n  'ю': 'yu',\n  'я': 'ya',\n  'А': 'A',\n  'Б': 'B',\n  'В': 'V',\n  'Г': 'G',\n  'Д': 'D',\n  'Е': 'E',\n  'Ё': 'Yo',\n  'Ж': 'Zh',\n  'З': 'Z',\n  'И': 'I',\n  'Й': 'J',\n  'К': 'K',\n  'Л': 'L',\n  'М': 'M',\n  'Н': 'N',\n  'О': 'O',\n  'П': 'P',\n  'Р': 'R',\n  'С': 'S',\n  'Т': 'T',\n  'У': 'U',\n  'Ф': 'F',\n  'Х': 'H',\n  'Ц': 'C',\n  'Ч': 'Ch',\n  'Ш': 'Sh',\n  'Щ': 'Sh',\n  'Ъ': 'U',\n  'Ы': 'Y',\n  'Ь': '',\n  'Э': 'E',\n  'Ю': 'Yu',\n  'Я': 'Ya',\n  'Є': 'Ye',\n  'І': 'I',\n  'Ї': 'Yi',\n  'Ґ': 'G',\n  'є': 'ye',\n  'і': 'i',\n  'ї': 'yi',\n  'ґ': 'g',\n  'č': 'c',\n  'ď': 'd',\n  'ě': 'e',\n  'ň': 'n',\n  'ř': 'r',\n  'š': 's',\n  'ť': 't',\n  'ů': 'u',\n  'ž': 'z',\n  'Č': 'C',\n  'Ď': 'D',\n  'Ě': 'E',\n  'Ň': 'N',\n  'Ř': 'R',\n  'Š': 'S',\n  'Ť': 'T',\n  'Ů': 'U',\n  'Ž': 'Z',\n  'ą': 'a',\n  'ć': 'c',\n  'ę': 'e',\n  'ł': 'l',\n  'ń': 'n',\n  'ś': 's',\n  'ź': 'z',\n  'ż': 'z',\n  'Ą': 'A',\n  'Ć': 'C',\n  'Ę': 'e',\n  'Ł': 'L',\n  'Ń': 'N',\n  'Ś': 'S',\n  'Ź': 'Z',\n  'Ż': 'Z',\n  'ā': 'a',\n  'ē': 'e',\n  'ģ': 'g',\n  'ī': 'i',\n  'ķ': 'k',\n  'ļ': 'l',\n  'ņ': 'n',\n  'ū': 'u',\n  'Ā': 'A',\n  'Ē': 'E',\n  'Ģ': 'G',\n  'Ī': 'i',\n  'Ķ': 'k',\n  'Ļ': 'L',\n  'Ņ': 'N',\n  'Ū': 'u',\n  '€': 'euro',\n  '₢': 'cruzeiro',\n  '₣': 'french franc',\n  '£': 'pound',\n  '₤': 'lira',\n  '₥': 'mill',\n  '₦': 'naira',\n  '₧': 'peseta',\n  '₨': 'rupee',\n  '₩': 'won',\n  '₪': 'new shequel',\n  '₫': 'dong',\n  '₭': 'kip',\n  '₮': 'tugrik',\n  '₯': 'drachma',\n  '₰': 'penny',\n  '₱': 'peso',\n  '₲': 'guarani',\n  '₳': 'austral',\n  '₴': 'hryvnia',\n  '₵': 'cedi',\n  '¢': 'cent',\n  '¥': 'yen',\n  '元': 'yuan',\n  '円': 'yen',\n  '﷼': 'rial',\n  '₠': 'ecu',\n  '¤': 'currency',\n  '฿': 'baht',\n  \"$\": 'dollar',\n  '©': '(c)',\n  'œ': 'oe',\n  'Œ': 'OE',\n  '∑': 'sum',\n  '®': '(r)',\n  '†': '+',\n  '“': '\"',\n  '”': '\"',\n  '‘': \"'\",\n  '’': \"'\",\n  '∂': 'd',\n  'ƒ': 'f',\n  '™': 'tm',\n  '℠': 'sm',\n  '…': '...',\n  '˚': 'o',\n  'º': 'o',\n  'ª': 'a',\n  '•': '*',\n  '∆': 'delta',\n  '∞': 'infinity',\n  '♥': 'love',\n  '&': 'and',\n  '|': 'or',\n  '<': 'less',\n  '>': 'greater'\n};\n\nmodule.exports = slug = function(string, replacement) {\n  var char, code, i, result, _i, _len;\n  if (replacement == null) {\n    replacement = '-';\n  }\n  result = \"\";\n  for (i = _i = 0, _len = string.length; _i < _len; i = ++_i) {\n    char = string[i];\n    code = string.charCodeAt(i);\n    if (char_map[char]) {\n      char = char_map[char];\n      code = char.charCodeAt(0);\n    }\n    char = char.replace(/[^\\w\\s$\\*\\_\\+~\\.\\(\\)\\'\\\"\\!\\-:@]/g, '');\n    result += char;\n  }\n  result = result.replace(/^\\s+|\\s+$/g, '');\n  result = result.replace(/[-\\s]+/g, replacement);\n  result.replace(\"\" + replacement + \"$\", '');\n  return result.toLowerCase();\n};\n","var __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nexports.BaseModel = (function(_super) {\n\n  __extends(BaseModel, _super);\n\n  function BaseModel() {\n    return BaseModel.__super__.constructor.apply(this, arguments);\n  }\n\n  BaseModel.prototype.isNew = function() {\n    return !(this.id != null);\n  };\n\n  return BaseModel;\n\n})(Backbone.Model);\n","var BaseModel, request, slugify,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseModel = require(\"models/models\").BaseModel;\n\nrequest = require(\"lib/request\");\n\nslugify = require(\"lib/slug\");\n\nexports.Note = (function(_super) {\n\n  __extends(Note, _super);\n\n  Note.prototype.rootUrl = 'notes/';\n\n  function Note(note) {\n    var dir, property, slugs, _i, _len, _ref;\n    Note.__super__.constructor.call(this);\n    for (property in note) {\n      this[property] = note[property];\n    }\n    if (typeof this.path === \"string\") {\n      this.path = JSON.parse(this.path);\n    }\n    slugs = [];\n    if (this.path != null) {\n      _ref = this.path;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        dir = _ref[_i];\n        slugs.push(slugify(dir));\n      }\n    }\n    this.slugPath = \"all/\" + slugs.join(\"/\");\n  }\n\n  Note.prototype.saveContent = function(content) {\n    this.content = content;\n    this.url = \"notes/\" + this.id;\n    return this.save({\n      content: this.content\n    });\n  };\n\n  Note.createNote = function(data, callback) {\n    data.version = '1';\n    return request.post(\"notes\", data, callback);\n  };\n\n  Note.updateNote = function(id, data, callback) {\n    data.version = '1';\n    return request.put(\"notes/\" + id, data, callback);\n  };\n\n  Note.deleteNote = function(id, callback) {\n    return request.del(\"notes/\" + id, callback);\n  };\n\n  Note.getNote = function(id, callback) {\n    var _this = this;\n    return $.get(\"notes/\" + id, function(data) {\n      var note;\n      note = new Note(data);\n      return callback(note);\n    });\n  };\n\n  return Note;\n\n})(BaseModel);\n","var slugify,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nslugify = require(\"helpers\").slugify;\n\nexports.MainRouter = (function(_super) {\n\n  __extends(MainRouter, _super);\n\n  function MainRouter() {\n    return MainRouter.__super__.constructor.apply(this, arguments);\n  }\n\n  /**\n  Routes:\n  \n    * '': home: initialize the app\n    * '#note/{note_uuid : 25 char}/slugyPath' : unique url corresponding \n      to a note where note_uuid is the note id and slugyPath the slugified \n      path of a note constituted with the name of its parents.\n  */\n\n\n  MainRouter.prototype.routes = {\n    '': 'home',\n    'note/all': 'allNotes',\n    'search/:query': 'search'\n  };\n\n  MainRouter.prototype.initialize = function() {\n    return this.route(/^note\\/(.*?)\\/(.*?)$/, 'note');\n  };\n\n  MainRouter.prototype.home = function() {\n    this.navigate(\"note/all\", {\n      trigger: false\n    });\n    return this._initializeTree(\"tree-node-all\", function() {\n      return app.homeView.selectNoteIfIframeLoaded();\n    });\n  };\n\n  MainRouter.prototype.allNotes = function() {\n    if ($('#tree').length > 0) {\n      return app.homeView.selectNote(\"tree-node-all\");\n    } else {\n      return this._initializeTree(\"tree-node-all\", function() {\n        return app.homeView.selectNoteIfIframeLoaded();\n      });\n    }\n  };\n\n  MainRouter.prototype.note = function(noteId, path) {\n    if ($(\"#tree\").length > 0) {\n      return app.homeView.selectNote(noteId);\n    } else {\n      return this._initializeTree(noteId, function() {\n        return app.homeView.selectNoteIfIframeLoaded();\n      });\n    }\n  };\n\n  MainRouter.prototype.search = function(query) {\n    query = query.replace(/-/g, ' ');\n    if ($('#tree').length === 0) {\n      return this._initializeTree(\"\", function() {\n        app.homeView.tree.addSearchTag(query);\n        return app.homeView.search(query);\n      });\n    } else {\n      return app.homeView.search(query);\n    }\n  };\n\n  MainRouter.prototype._initializeTree = function(noteId, callback) {\n    $('body').append(app.homeView.el);\n    return app.homeView.initContent(noteId, callback);\n  };\n\n  return MainRouter;\n\n})(Backbone.Router);\n","var LatestView, Note, NoteView, NotesCollection, SearchView, Tree, slugify,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nTree = require(\"./widgets/tree\").Tree;\n\nNoteView = require(\"./note_view\").NoteView;\n\nLatestView = require(\"./latest_view\").LatestView;\n\nNote = require(\"../models/note\").Note;\n\nNotesCollection = require(\"../collections/notes\");\n\nSearchView = require('./search_view');\n\nslugify = require('../lib/slug');\n\n/**\n# Main view that manages interaction between toolprogressBar, navigation and notes\n*/\n\n\nexports.HomeView = (function(_super) {\n\n  __extends(HomeView, _super);\n\n  function HomeView() {\n    this.renderNote = __bind(this.renderNote, this);\n\n    this.selectNote = __bind(this.selectNote, this);\n\n    this.onTreeSelectionChg = __bind(this.onTreeSelectionChg, this);\n\n    this.onTreeRemove = __bind(this.onTreeRemove, this);\n\n    this.enableTreeHotkey = __bind(this.enableTreeHotkey, this);\n\n    this.disableTreeHotkey = __bind(this.disableTreeHotkey, this);\n\n    this.onNoteTitleChange = __bind(this.onNoteTitleChange, this);\n\n    this.onTreeRename = __bind(this.onTreeRename, this);\n\n    this.search = __bind(this.search, this);\n\n    this.onSearch = __bind(this.onSearch, this);\n\n    this.onWindowScrolled = __bind(this.onWindowScrolled, this);\n\n    this.onWindowResized = __bind(this.onWindowResized, this);\n\n    this.onWindowClosed = __bind(this.onWindowClosed, this);\n\n    this.selectNoteIfIframeLoaded = __bind(this.selectNoteIfIframeLoaded, this);\n\n    this.onIFrameLoaded = __bind(this.onIFrameLoaded, this);\n    return HomeView.__super__.constructor.apply(this, arguments);\n  }\n\n  HomeView.prototype.id = 'home-view';\n\n  /**\n  # Load the home view and the tree\n  # Called once by the main_router\n  */\n\n\n  HomeView.prototype.initContent = function(note_uuid, callback) {\n    this.note_uuid = note_uuid;\n    this.iframeLoaded = false;\n    this.treeLoaded = false;\n    this.buildViews();\n    this.configureLayoutDrag();\n    this.loadTree(callback);\n    this.configureScrolling();\n    this.configureResize();\n    return this.configureSaving();\n  };\n\n  HomeView.prototype.buildViews = function() {\n    var _this = this;\n    this.$el.html(require('./templates/home'));\n    this.noteView = new NoteView(this, this.onIFrameLoaded);\n    this.noteFull = this.$(\"#note-full\");\n    this.noteFull.hide();\n    this.latestView = new LatestView();\n    this.latestView.$el.appendTo($('#note-area'));\n    this.searchView = new SearchView(this.$(\"#search-view\"));\n    return this.$el.layout({\n      size: \"250\",\n      minSize: \"250\",\n      resizable: true,\n      spacing_open: 10,\n      spacing_closed: 10,\n      togglerLength_closed: \"100%\",\n      defaults: {\n        enableCursorHotkey: false\n      },\n      onresize_end: function() {\n        return _this.onWindowResized();\n      }\n    });\n  };\n\n  HomeView.prototype.loadTree = function(callback) {\n    var _this = this;\n    return $.get(\"tree/\", function(data) {\n      window.tree = data;\n      _this.tree = new Tree(_this.$(\"#nav\"), data, {\n        onCreate: _this.onCreateFolder,\n        onRename: _this.onTreeRename,\n        onRemove: _this.onTreeRemove,\n        onSelect: _this.onTreeSelectionChg,\n        onLoaded: callback,\n        onDrop: _this.onNoteDropped,\n        onSearch: _this.onSearch\n      });\n      return _this.$(\"#create-note\").click(function() {\n        return _this.tree.widget.jstree(\"create\", \"#tree-node-all\", \"first\", \"A New Note\");\n      });\n    });\n  };\n\n  HomeView.prototype.configureLayoutDrag = function() {\n    var drag;\n    drag = $(\"#drag\");\n    return $(\".ui-layout-resizer\").bind('mousedown', function(e) {});\n  };\n\n  HomeView.prototype.configureResize = function() {\n    this.onWindowResized();\n    $(window).resize(this.onWindowResized);\n    return this.faketop.on('topaffix', this.onWindowResized);\n  };\n\n  HomeView.prototype.configureScrolling = function() {\n    this.faketop = $('\\\n            <div id=\"faketop\">\\\n                <div id=\"faketop-grad\"></div>\\\n            </div>');\n    this.faketop.prependTo($('#note-full'));\n    return $('#note-area').scroll(this.onWindowScrolled);\n  };\n\n  HomeView.prototype.configureSaving = function() {\n    return window.addEventListener('beforeunload', this.onWindowClosed);\n  };\n\n  /* Listeners\n  */\n\n\n  HomeView.prototype.onIFrameLoaded = function() {\n    this.iframeLoaded = true;\n    if (this.treeLoaded) {\n      this.selectNote(this.note_uuid);\n    }\n    this.treeLoaded = true;\n    return this.iframe = $(\"iframe\");\n  };\n\n  HomeView.prototype.selectNoteIfIframeLoaded = function() {\n    this.treeLoaded = true;\n    if (this.iframeLoaded) {\n      return this.selectNote(this.note_uuid);\n    }\n  };\n\n  HomeView.prototype.onWindowClosed = function(e) {\n    var pleasewaitmsg;\n    if ((this.noteView != null) && this.noteView.savingState === 'clean') {\n      return null;\n    }\n    pleasewaitmsg = 'You have some unsaved changes. ';\n    pleasewaitmsg += 'Please stay on this page while they are saved.';\n    if ((this.noteView != null) && this.noteView.savingState === 'dirty') {\n      this.noteView.saveEditorContent();\n    }\n    e.returnValue = pleasewaitmsg;\n    return pleasewaitmsg;\n  };\n\n  HomeView.prototype.onWindowResized = function() {\n    var editorBB, fileList, ns, nsLeft, title, windowHeight, windowWidth;\n    windowWidth = $(window).width();\n    windowHeight = $(window).height();\n    ns = $('#note-style');\n    nsLeft = ns.offset().left;\n    if (this.faketop != null) {\n      this.faketop.width(ns.width());\n      this.faketop.offset({\n        'left': nsLeft\n      });\n    }\n    fileList = $('#note-file-list');\n    editorBB = $('#editor-button-bar');\n    editorBB.css({\n      'left': nsLeft - 0.5 * editorBB.width()\n    });\n    title = $('#note-full-title');\n    title.width($('#editor-container').width() - 10);\n    if (this.faketop != null) {\n      this.faketop.width(ns.width() + 102);\n      $('#faketop-grad').width(ns.width() + 102);\n      return this.faketop.offset({\n        'left': nsLeft\n      });\n    }\n  };\n\n  HomeView.prototype.onWindowScrolled = function() {\n    var scrollTop;\n    scrollTop = $('#note-area').scrollTop();\n    this.handleAffix($('#note-full-breadcrumb'), scrollTop, 30);\n    this.handleAffix($('#note-file-list'), scrollTop, 30);\n    this.handleAffix($('#note-full-title'), scrollTop, 30);\n    this.handleAffix($('#faketop'), scrollTop, 30);\n    return this.handleAffix($('#faketop-grad'), scrollTop, 30);\n  };\n\n  HomeView.prototype.handleAffix = function(el, scrollTop, limit) {\n    if (scrollTop > limit) {\n      if (!el.hasClass('topaffix')) {\n        el.addClass('topaffix');\n        return el.trigger('topaffix');\n      }\n    } else {\n      if (el.hasClass('topaffix')) {\n        el.removeClass('topaffix');\n        return el.trigger('topaffix');\n      }\n    }\n  };\n\n  HomeView.prototype.onSearch = function(query) {\n    if (query.length > 0) {\n      return app.router.navigate(\"search/\" + (slugify(query)), {\n        trigger: true\n      });\n    } else {\n      if (this.treeLoaded) {\n        return app.router.navigate(\"note/all\", {\n          trigger: true\n        });\n      }\n    }\n  };\n\n  HomeView.prototype.search = function(query) {\n    var _this = this;\n    if (this.tree != null) {\n      this.latestView.$el.hide();\n      this.tree.widget.jstree(\"search\", query);\n      return NotesCollection.search(query, function(notes) {\n        _this.searchView.fill(notes, query);\n        return _this.noteFull.fadeOut(function() {\n          return _this.searchView.fadeIn();\n        });\n      });\n    }\n  };\n\n  /**\n  Create a new folder.\n  Params :\n      fullPath : path of the folder\n      newName : name of the folder\n  */\n\n\n  HomeView.prototype.onCreateFolder = function(parentId, newName, data) {\n    return Note.createNote({\n      title: newName,\n      parent_id: parentId\n    }, function(err, note) {\n      if (err) {\n        return alert(\"Server error occured.\");\n      } else {\n        data.rslt.obj.data(\"id\", note.id);\n        data.rslt.obj.prop(\"id\", note.id);\n        data.inst.deselect_all();\n        return data.inst.select_node(data.rslt.obj);\n      }\n    });\n  };\n\n  /**\n  # Only called by jsTree event \"rename.jstree\" trigered when a node\n  # is renamed.\n  # May be called by another note than the currently selected node.\n  */\n\n\n  HomeView.prototype.onTreeRename = function(uuid, newName) {\n    if (newName != null) {\n      if (this.tree.currentNote_uuid === uuid) {\n        this.noteView.setTitle(newName);\n        this.noteView.updateBreadcrumbOnTitleChange(newName);\n      }\n      return Note.updateNote(uuid, {\n        title: newName\n      }, function(err) {\n        if (err) {\n          return alert(\"Server error occured\");\n        }\n      });\n    }\n  };\n\n  /**\n  # When note title is changed, the changement is send to backend for\n  # persistence.\n  */\n\n\n  HomeView.prototype.onNoteTitleChange = function(uuid, newName) {\n    var _this = this;\n    if (newName != null) {\n      this.tree.jstreeEl.jstree(\"rename_node\", \"#\" + uuid, newName);\n      return Note.updateNote(uuid, {\n        title: newName\n      }, function(err) {\n        if (err) {\n          alert(\"Server error occured\");\n        }\n        return _this.noteView.updateEditorReminderCf(newName);\n      });\n    }\n  };\n\n  HomeView.prototype.disableTreeHotkey = function() {\n    return this.tree.disable_hotkeys();\n  };\n\n  HomeView.prototype.enableTreeHotkey = function() {\n    return this.tree.enable_hotkeys();\n  };\n\n  /**\n  # Only called by jsTree event \"select_node.jstree\"\n  # Delete currently selected node.\n  */\n\n\n  HomeView.prototype.onTreeRemove = function(note_uuid) {\n    if (this.currentNote && this.currentNote.id === note_uuid) {\n      return this.currentNote.destroy();\n    } else {\n      return Note.deleteNote(note_uuid, function(err) {\n        if (err) {\n          return alert(\"Server error occured\");\n        }\n      });\n    }\n  };\n\n  /**\n  # Only called by jsTree event \"select_node\"\n  # When a node is selected, the note_view is displayed and filled with\n  # note data.\n  */\n\n\n  HomeView.prototype.onTreeSelectionChg = function(path, id, data) {\n    var changeView, _ref,\n      _this = this;\n    this.tree.widget.jstree(\"search\", \"\");\n    this.searchView.hide();\n    changeView = function() {\n      if (path.indexOf(\"/\")) {\n        path = \"/\" + path;\n      }\n      app.router.navigate(\"note\" + path, {\n        trigger: false\n      });\n      if (!(id != null) || id === \"tree-node-all\") {\n        _this.latestView.$el.show();\n        return _this.noteFull.hide();\n      } else {\n        _this.latestView.$el.hide();\n        _this.noteView.showLoading();\n        return Note.getNote(id, function(note) {\n          _this.noteView.hideLoading();\n          _this.renderNote(note, data);\n          _this.noteFull.show();\n          return _this.onWindowResized();\n        });\n      }\n    };\n    if (((_ref = this.noteView) != null ? _ref.savingState : void 0) === 'clean') {\n      return changeView();\n    } else {\n      return this.noteView.saveEditorContent(function(err) {\n        if (err) {\n          return console.log(err);\n        }\n        return changeView();\n      });\n    }\n  };\n\n  /**\n  # When note is dropped, its old path and its new path are sent to server\n  # for persistence.\n  */\n\n\n  HomeView.prototype.onNoteDropped = function(nodeId, targetNodeId) {\n    return Note.updateNote(nodeId, {\n      parent_id: targetNodeId\n    }, function() {});\n  };\n\n  /* Functions\n  */\n\n\n  /**\n  # Force selection inside tree of note of a given uuid.\n  */\n\n\n  HomeView.prototype.selectNote = function(noteId) {\n    var _ref, _ref1;\n    if (!(noteId != null) || (noteId === \"all\" || noteId === 'tree-node-all') || noteId.length === 0) {\n      this.latestView.$el.show();\n      this.noteFull.hide();\n      if ((_ref = this.tree) != null) {\n        _ref.widget.jstree(\"deselect_all\");\n      }\n      if ((_ref1 = this.tree) != null) {\n        _ref1.widget.jstree(\"search\", \"\");\n      }\n      return this.searchView.hide();\n    } else {\n      return this.tree.selectNode(noteId);\n    }\n  };\n\n  /**\n  # Fill note widget with note data.\n  */\n\n\n  HomeView.prototype.renderNote = function(note, data) {\n    note.url = \"notes/\" + note.id;\n    this.currentNote = note;\n    return this.noteView.setModel(note, data);\n  };\n\n  return HomeView;\n\n})(Backbone.View);\n","var NoteCollection,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nNoteCollection = require('collections/notes');\n\nexports.LatestView = (function(_super) {\n\n  __extends(LatestView, _super);\n\n  function LatestView() {\n    this.render = __bind(this.render, this);\n    return LatestView.__super__.constructor.apply(this, arguments);\n  }\n\n  LatestView.prototype.id = 'latest-view';\n\n  LatestView.prototype.itemTemplate = require('views/templates/search_result');\n\n  LatestView.prototype.initialize = function() {\n    this.collection = new NoteCollection();\n    return this.refresh();\n  };\n\n  LatestView.prototype.refresh = function() {\n    this.collection.reset([]);\n    return this.collection.fetch({\n      url: 'notes/latest/',\n      success: this.render\n    });\n  };\n\n  LatestView.prototype.render = function() {\n    var _this = this;\n    this.$el.html(\"\");\n    this.$el.append(\"<h1>Latest Notes</h1>\");\n    if (this.collection.length === 0) {\n      return this.$el.append(\"<p>You have no notes, use the tree on the left to create one.</p>\");\n    } else {\n      return this.collection.each(function(note) {\n        var date;\n        date = Date.create(note.lastModificationValueOf);\n        date = date.long();\n        return _this.$el.append(_this.itemTemplate({\n          note: note,\n          date: date\n        }));\n      });\n    }\n  };\n\n  return LatestView;\n\n})(Backbone.View);\n","var CNeditor, FileList, Note, TreeInst, helpers, template,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\ntemplate = require('./templates/note');\n\nNote = require('../models/note').Note;\n\nTreeInst = require('./widgets/tree');\n\nFileList = require('./widgets/file_list').FileList;\n\nCNeditor = require('CNeditor/editor');\n\nhelpers = require('../helpers');\n\nexports.NoteView = (function(_super) {\n\n  __extends(NoteView, _super);\n\n  NoteView.prototype.className = \"note-full\";\n\n  NoteView.prototype.id = \"note-full\";\n\n  NoteView.prototype.tagName = \"div\";\n\n  /* Constructor\n  */\n\n\n  NoteView.prototype.remove = function() {\n    return this.$el.remove();\n  };\n\n  function NoteView(homeView, onIFrameLoaded) {\n    this.homeView = homeView;\n    this.onIFrameLoaded = onIFrameLoaded;\n    this.saveEditorContent = __bind(this.saveEditorContent, this);\n\n    this.updateEditorReminderCf = __bind(this.updateEditorReminderCf, this);\n\n    NoteView.__super__.constructor.apply(this, arguments);\n    this.$el = $(\"#note-full\");\n    this.$(\"#editor\").html(require('./templates/editor'));\n    this.savingState = 'clean';\n    this.saveTimer = null;\n    this.saveButton = this.$('#save-editor-content');\n    this.noteFullTitle = this.$('#note-full-title');\n    this.breadcrumb = this.$('#note-full-breadcrumb');\n    this.editor = new CNeditor(this.$('#editor-container')[0], this.onIFrameLoaded);\n    this.configureButtons();\n    this.setTitleListeners();\n    this.setEditorFocusListener();\n    this.setSaveListeners();\n    this.fileList = new FileList(this.model, '#file-list');\n  }\n\n  /*\n      # every keyUp in the note's editor will trigger a countdown of 3s, after\n      # 3s and if the user didn't type anything, the content will be saved\n  */\n\n\n  NoteView.prototype.setSaveListeners = function() {\n    var _this = this;\n    this.$(\"#editor-container\").on(\"onChange\", function() {\n      _this.saveButton.removeClass(\"active\");\n      clearTimeout(_this.saveTimer);\n      _this.saveTimer = setTimeout(_this.saveEditorContent, 3000);\n      return _this.savingState = 'dirty';\n    });\n    this.saveButton.click(this.saveEditorContent);\n    return this.$('#editor-container').on('saveRequest', function() {\n      _this.savingState = 'dirty';\n      return _this.saveEditorContent();\n    });\n  };\n\n  NoteView.prototype.setTitleListeners = function() {\n    var _this = this;\n    this.noteFullTitle.live(\"keypress\", function(event) {\n      if (event.keyCode === 13) {\n        return _this.noteFullTitle.trigger(\"blur\");\n      }\n    });\n    return this.noteFullTitle.blur(function() {\n      var newName, oldName;\n      newName = _this.noteFullTitle.val();\n      oldName = _this.model.title;\n      if (newName !== \"\" && oldName !== newName) {\n        _this.homeView.onNoteTitleChange(_this.model.id, newName);\n        _this.homeView.tree._updateSuggestionList(\"rename\", newName, oldName);\n        return _this.updateBreadcrumbOnTitleChange(newName);\n      }\n    });\n  };\n\n  NoteView.prototype.setEditorFocusListener = function() {\n    var editorEl;\n    editorEl = document.getElementById('editor-container');\n    editorEl.addEventListener('focus', this.homeView.disableTreeHotkey, true);\n    return editorEl.addEventListener('blur', this.homeView.enableTreeHotkey, true);\n  };\n\n  NoteView.prototype.configureButtons = function() {\n    var delay,\n      _this = this;\n    this.indentBtn = this.$(\"#indentBtn\");\n    this.unIndentBtn = this.$(\"#unIndentBtn\");\n    this.markerListBtn = this.$(\"#markerListBtn\");\n    this.toggleBtn = this.$(\"#toggleBtn\");\n    this.boldBtn = this.$(\"#boldBtn\");\n    this.linkBtn = this.$(\"#linkBtn\");\n    this.metaBtn = this.$(\"#metaBtn\");\n    this.saveEditorBtn = this.$(\"#save-editor-content\");\n    this.titleBtn = this.$(\"#titleBtn\");\n    delay = {\n      show: 400,\n      hide: 100\n    };\n    this.indentBtn.tooltip({\n      placement: \"right\",\n      title: \"Indent (Tab)\",\n      delay: delay\n    });\n    this.indentBtn.on(\"click\", function() {\n      _this.editor.tab();\n      return _this.editor.setFocus();\n    });\n    this.unIndentBtn.tooltip({\n      placement: \"right\",\n      title: \"Unindent (Shift + Tab)\",\n      delay: delay\n    });\n    this.unIndentBtn.on(\"click\", function() {\n      _this.editor.shiftTab();\n      return _this.editor.setFocus();\n    });\n    this.toggleBtn.tooltip({\n      placement: \"right\",\n      title: \"Toggle line type (Alt + A)\",\n      delay: delay\n    });\n    this.toggleBtn.on(\"click\", function() {\n      _this.editor.toggleType();\n      return _this.editor.setFocus();\n    });\n    this.boldBtn.tooltip({\n      placement: \"right\",\n      title: \"Bold (Ctrl + B)\",\n      delay: delay\n    });\n    this.boldBtn.on(\"click\", function() {\n      _this.editor.strong();\n      return _this.editor.setFocus();\n    });\n    this.linkBtn.tooltip({\n      placement: \"right\",\n      title: \"Create or edit a link (Ctrl + K)\",\n      delay: delay\n    });\n    this.linkBtn.on(\"click\", function(e) {\n      return _this.editor.linkifySelection();\n    });\n    this.metaBtn.tooltip({\n      placement: \"right\",\n      title: \"Add a meta-object (@)\",\n      delay: delay\n    });\n    this.metaBtn.on(\"click\", function(e) {\n      _this.editor.emulateAt();\n      return _this.editor.setFocus();\n    });\n    return this.saveEditorBtn.tooltip({\n      placement: \"right\",\n      title: \"Save the current content\",\n      delay: delay\n    });\n  };\n\n  /*\n      #\n  */\n\n\n  NoteView.prototype.setModel = function(note, data) {\n    this.model = note;\n    this.setTitle(note.title);\n    this.setContent(note);\n    this.createBreadcrumb(note, data);\n    this.fileList.configure(this.model);\n    return this.fileList.render();\n  };\n\n  NoteView.prototype.updateEditorReminderCf = function(title) {\n    return this.editor.setReminderCf(\"note \" + title, {\n      app: 'notes',\n      url: \"note/\" + this.model.id + \"/\"\n    });\n  };\n\n  NoteView.prototype.showLoading = function() {\n    this.noteFullTitle.hide();\n    this.$('#editor-container').hide();\n    return this.$(\"#note-style\").spin(\"large\");\n  };\n\n  NoteView.prototype.hideLoading = function() {\n    this.noteFullTitle.show();\n    this.$('#editor-container').show();\n    return this.$(\"#note-style\").spin();\n  };\n\n  /*\n      #  Display note title\n  */\n\n\n  NoteView.prototype.setTitle = function(title) {\n    this.noteFullTitle.val(title);\n    return this.updateEditorReminderCf(title);\n  };\n\n  /*\n      # Stop saving timer if any and force saving of editor content.\n  */\n\n\n  NoteView.prototype.saveEditorContent = function(callback) {\n    var data,\n      _this = this;\n    if ((this.model != null) && (this.editor != null) && this.savingState !== 'clean') {\n      this.savingState = 'saving';\n      clearTimeout(this.saveTimer);\n      this.saveTimer = null;\n      this.saveButton.spin('small');\n      this.editor.saveTasks();\n      data = {\n        content: this.editor.getEditorContent()\n      };\n      return Note.updateNote(this.model.id, data, function(error) {\n        if (error) {\n          alert(\"Unable to save changes on the server. Try again\");\n          console.log(error);\n        } else if (_this.savingState === 'saving') {\n          _this.savingState = 'clean';\n        }\n        _this.homeView.latestView.refresh();\n        _this.saveButton.addClass(\"active\");\n        _this.saveButton.spin();\n        if (typeof callback === 'function') {\n          return callback(error);\n        }\n      });\n    }\n  };\n\n  /**\n   * Display given content inside editor.\n   * If no content is given, editor is cleared.\n  */\n\n\n  NoteView.prototype.setContent = function(note) {\n    console.log(note);\n    if (note.content) {\n      if (!note.version || /^#/gm.test(note.content)) {\n        return this.editor.setEditorContentFromMD(note.content);\n      } else {\n        return this.editor.setEditorContent(note.content);\n      }\n    } else {\n      return this.editor.deleteContent();\n    }\n  };\n\n  /**\n   * create a breadcrumb showing a clickable way from the root to the current note\n   * input: noteModel, contains the informations of the current note\n   *  data, allow to reach the id of the parents of the current note\n   * output: the breadcrumb html is modified\n  */\n\n\n  NoteView.prototype.createBreadcrumb = function(noteModel, data) {\n    var breadcrumb, currentPath, noteName, parent, path, paths;\n    paths = noteModel.path;\n    noteName = paths.pop();\n    breadcrumb = \"\";\n    parent = this.homeView.tree.jstreeEl.jstree(\"get_selected\");\n    while (paths.length > 0) {\n      parent = data.inst._get_parent(parent);\n      path = \"#note/\" + parent[0].id + \"/\";\n      currentPath = paths.join(\"/\");\n      noteName = paths.pop();\n      breadcrumb = \"<a href='\" + path + currentPath + \"'> \" + noteName + \"</a> >\" + breadcrumb;\n    }\n    breadcrumb = \"<a href='#note/all'> All</a> > \" + breadcrumb;\n    this.breadcrumb.find(\"a\").unbind();\n    this.breadcrumb.html(breadcrumb);\n    return this.breadcrumb.find(\"a\").click(function(event) {\n      var hash, id;\n      event.preventDefault();\n      hash = event.target.hash.substring(1);\n      path = hash.split(\"/\");\n      id = path[1];\n      app.router.navigate(\"note/\" + id);\n      return app.homeView.selectNote(id);\n    });\n  };\n\n  /**\n   * in case of renaming a note this function update the breadcrumb in consequences\n  */\n\n\n  NoteView.prototype.updateBreadcrumbOnTitleChange = function(newName) {\n    return this.breadcrumb.find(\" a:last\").text(newName);\n  };\n\n  return NoteView;\n\n})(Backbone.View);\n","var SearchView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nSearchView = (function(_super) {\n\n  __extends(SearchView, _super);\n\n  SearchView.prototype.id = \"note-search\";\n\n  function SearchView($el) {\n    this.$el = $el;\n    this.$el.hide();\n    this.$el.html(require('views/templates/search_view'));\n    this.results = this.$(\".results\");\n    this.queryTitle = this.$(\"span\");\n  }\n\n  SearchView.prototype.fill = function(notes, query) {\n    var date, note, template, _i, _len, _results;\n    this.results.html(null);\n    this.queryTitle.html(\" \" + query);\n    template = require('views/templates/search_result');\n    if (notes.length) {\n      _results = [];\n      for (_i = 0, _len = notes.length; _i < _len; _i++) {\n        note = notes[_i];\n        date = Date.create(note.lastModificationValueOf);\n        date = date.format();\n        _results.push(this.results.append(template({\n          note: note,\n          date: date\n        })));\n      }\n      return _results;\n    } else {\n      return this.results.append('<p class=\"pl1\">No note found.</p>');\n    }\n  };\n\n  SearchView.prototype.fadeIn = function(callback) {\n    return this.$el.fadeIn(callback);\n  };\n\n  SearchView.prototype.fadeOut = function(callback) {\n    return this.$el.fadeOut(callback);\n  };\n\n  SearchView.prototype.hide = function() {\n    return this.$el.hide();\n  };\n\n  return SearchView;\n\n})(Backbone.View);\n\nmodule.exports = SearchView;\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"CNID_1\" class=\"Tu-1\"><span></span><br/></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"editor-button-bar\" class=\"btn-group btn-group-vertical clearfix\"><button id=\"indentBtn\" class=\"btn btn-small\"><i class=\"icon-indent-right\"></i></button><button id=\"unIndentBtn\" class=\"btn btn-small\"><i class=\"icon-indent-left\"></i></button><button id=\"toggleBtn\" class=\"btn btn-small\"><i class=\"icon-toggle\"></i></button><button id=\"boldBtn\" class=\"btn btn-small\"><i class=\"icon-bold\"></i></button><button id=\"linkBtn\" class=\"btn btn-small\"><i class=\"icon-link\"></i></button><button id=\"metaBtn\" class=\"btn btn-small\"><i class=\"icon-tags\"></i></button><button id=\"save-editor-content\" class=\"btn active btn-small\"><i class=\"icon-download-alt\"></i></button></div><div class=\"spacer\"></div><div id=\"note-file-list\"><div id=\"file-number\">0 files</div><div id=\"file-pic\"></div><div id=\"file-list\"></div></div><div id=\"editor-container\"></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"nav\" class=\"ui-layout-west\"><div id=\"tree\"></div></div><div id=\"note-area\" class=\"ui-layout-center\"><div id=\"search-view\"></div><div id=\"latest-view\"></div><div id=\"note-full\" class=\"note-full\"><div id=\"note-full-breadcrumb\">/</div><div id=\"note-style\"><input id=\"note-full-title\"/><div id=\"editor\"></div></div><div class=\"clearfix\"></div></div></div><div id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" class=\"modal hide fade in\"><div class=\"modal-header\"><h3 id=\"myModalLabel\">Warning!</h3></div><div class=\"modal-body\"><p>You are about to delete this note and all its children. Do you want to continue?</p></div><div class=\"modal-footer\"><button id=\"modal-yes\" data-dismiss=\"modal\" aria-hidden=\"true\" class=\"btn\">Yes</button><button data-dismiss=\"modal\" aria-hidden=\"true\" class=\"btn\">No</button></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<p>' + escape((interp = note.humanPath.split(\",\").join(\" / \")) == null ? '' : interp) + '</p><h2>' + escape((interp = note.title) == null ? '' : interp) + '</h2><textarea id=\"note-content\"></textarea>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"search-result\"><h2><span class=\"date\">' + escape((interp = date) == null ? '' : interp) + '</span><a');\nbuf.push(attrs({ 'href':(\"#note/\" + (note.id) + \"/\" + (note.slugPath) + \"\") }, {\"href\":true}));\nbuf.push('> ' + escape((interp = note.title) == null ? '' : interp) + '</a></h2><p><' + (note.preview) + '></' + (note.preview) + '></p></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>Search results for<span></span></h1><div class=\"results\"></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"tree-buttons\"><div id=\"tree-create\" class=\"button\"><i class=\"icon-plus\"></i></div><div id=\"tree-rename\" class=\"button\"><i class=\"icon-pencil\"></i></div><div id=\"tree-remove\" class=\"button\"><i class=\"icon-remove\"></i></div></div><div id=\"tree-top-buttons\"><input id=\"tree-search-field\" type=\"text\" class=\"span2\"/><i id=\"suppr-button\" style=\"display: none\" class=\"icon-remove-circle\"></i></div><div id=\"my-notes\"><a href=\"#note/all\"><img id=\"my-notes-pic\" src=\"img/my-notes.png\"/></a><div id=\"create-note\"></div></div>');\n}\nreturn buf.join(\"\");\n};","var helpers,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nhelpers = require('../../helpers');\n\nexports.FileList = (function(_super) {\n\n  __extends(FileList, _super);\n\n  function FileList(model, id) {\n    this.model = model;\n    this.id = id;\n    this.onMouseLeave = __bind(this.onMouseLeave, this);\n\n    this.onMouseEnter = __bind(this.onMouseEnter, this);\n\n    this.onUploadComplete = __bind(this.onUploadComplete, this);\n\n    this.onSubmit = __bind(this.onSubmit, this);\n\n    this.$el = $(this.id);\n    this.uploadButton = $(\"#file-pic\");\n    this.uploader = new qq.FileUploaderBasic({\n      button: document.getElementById('file-pic'),\n      multiple: false,\n      forceMultipart: true,\n      onComplete: this.onUploadComplete,\n      onSubmit: this.onSubmit\n    });\n    this.widget = $(\"#note-file-list\");\n    this.widget.mouseenter(this.onMouseEnter);\n    this.widget.mouseleave(this.onMouseLeave);\n  }\n\n  FileList.prototype.onSubmit = function(id, filename) {\n    if ((this.model._attachments != null) && (this.model._attachments[filename] != null)) {\n      return false;\n    }\n    return this.uploadButton.spin('small');\n  };\n\n  FileList.prototype.onUploadComplete = function(id, filename, response) {\n    var _this = this;\n    if (!(this.model._attachments != null)) {\n      this.model._attachments = {};\n    }\n    this.model._attachments[filename] = {};\n    this.addFileLine(filename);\n    this.setFileNumber();\n    return this.$el.slideDown(function() {\n      return _this.uploadButton.spin();\n    });\n  };\n\n  FileList.prototype.onMouseEnter = function() {\n    var _this = this;\n    this.widget.unbind('mouseleave');\n    return this.$el.slideDown(function() {\n      return _this.widget.mouseleave(_this.onMouseLeave);\n    });\n  };\n\n  FileList.prototype.onMouseLeave = function() {\n    return this.$el.slideUp();\n  };\n\n  FileList.prototype.configure = function(model) {\n    this.model = model;\n    this.uploader._options.action = \"notes/\" + this.model.id + \"/files/\";\n    this.uploader._handler._options.action = \"notes/\" + this.model.id + \"/files/\";\n    return this.setFileNumber();\n  };\n\n  /**\n  # Display inside dedicated div list of files attached to the current note.\n  */\n\n\n  FileList.prototype.render = function() {\n    var file;\n    if (this.model != null) {\n      this.$('.note-file button').unbind();\n      this.$el.html(null);\n      for (file in this.model._attachments) {\n        this.addFileLine(file);\n      }\n      return this.setFileNumber();\n    }\n  };\n\n  FileList.prototype.addFileLine = function(file) {\n    var delButton, line, lineId, path, slug,\n      _this = this;\n    path = \"notes/\" + this.model.id + \"/files/\" + file;\n    slug = helpers.slugify(file);\n    lineId = \"note-\" + slug;\n    this.$el.append(\"<div class=\\\"note-file spacer\\\" id=\\\"\" + lineId + \"\\\">\\n    <a href=\\\"\" + path + \"\\\" target=\\\"_blank\\\">\" + file + \"</a>\\n    <button>(x)</button>\\n</div>\");\n    line = this.$el.find(\"#\" + lineId);\n    line.hide();\n    delButton = line.find(\"button\");\n    delButton.click(function(target) {\n      delButton.html(\"&nbsp;&nbsp;&nbsp;\");\n      delButton.spin('tiny');\n      return $.ajax({\n        url: path,\n        type: \"DELETE\",\n        success: function() {\n          delButton.spin();\n          delete _this.model._attachments[file];\n          _this.setFileNumber();\n          return line.fadeOut(function() {\n            return line.remove();\n          });\n        },\n        error: function() {\n          return alert(\"Server error occured.\");\n        }\n      });\n    });\n    return line.fadeIn();\n  };\n\n  FileList.prototype.setFileNumber = function() {\n    var file, fileNumber;\n    fileNumber = 0;\n    for (file in this.model._attachments) {\n      fileNumber++;\n    }\n    if (fileNumber > 1) {\n      return this.widget.find('#file-number').html(\"\" + fileNumber + \" files\");\n    } else if (fileNumber === 1) {\n      return this.widget.find('#file-number').html(\"\" + fileNumber + \" file\");\n    } else {\n      return this.widget.find('#file-number').html(\"no file\");\n    }\n  };\n\n  return FileList;\n\n})(Backbone.View);\n","var slugify,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nslugify = require(\"lib/slug\");\n\n/* Widget to easily manipulate data tree (navigation for cozy apps)\nProperties :\n    currentPath      = ex : /all/coutries/great_britain\n                       (\"great_britain\" is the uglified name of the note)\n    currentData      = data : jstree data obj sent by the select\n    currentNote_uuid : uuid of the currently selected note\n    widget           = @jstreeEl.jstree\n    searchField      = $(\"#tree-search-field\")\n    searchButton     = $(\"#tree-search\")\n    noteFull\n    jstreeEl         = $(\"#tree\")\n*/\n\n\nexports.Tree = (function() {\n  /**\n  # suggestionList is a global array containing all the suggestions for the\n  # autocompletion plugin\n  # this array contains objects with the nature of the suggestion\n  # (folder, tag, search string...) and the string corresponding to the suggestion\n  */\n\n  var suggestionList;\n\n  suggestionList = [];\n\n  /**\n  # Initialize jsTree tree with options : sorting, create/rename/deldarkgrey\n  # unique children and json data for loading.\n  # params :\n  #   navEl :\n  #   data :\n  #   homeViewCbk :\n  */\n\n\n  function Tree(navEl, data, homeViewCbk) {\n    this._getSlugPath = __bind(this._getSlugPath, this);\n\n    this._updateSuggestionList = __bind(this._updateSuggestionList, this);\n\n    this._recursiveRemoveSuggestionList = __bind(this._recursiveRemoveSuggestionList, this);\n\n    var jstreeEl, __initSuggestionList;\n    jstreeEl = $(\"#tree\");\n    this.jstreeEl = jstreeEl;\n    this.homeViewCbk = homeViewCbk;\n    this.searchField = $(\"#tree-search-field\");\n    navEl.prepend(require('../templates/tree_buttons'));\n    /**\n    # Creation of the jstree\n    # Please visit http://www.jstree.com/ for more information\n    */\n\n    data = JSON.parse(data);\n    this.widget = this.jstreeEl.jstree({\n      plugins: [\"themes\", \"json_data\", \"ui\", \"crrm\", \"unique\", \"sort\", \"cookies\", \"types\", \"hotkeys\", \"dnd\", \"search\"],\n      json_data: {\n        data: data\n      },\n      types: {\n        \"default\": {\n          valid_children: \"default\",\n          icon: {\n            image: \"test.png\"\n          }\n        },\n        folder: {\n          icon: {\n            image: \"test.png\"\n          }\n        },\n        root: {\n          valid_children: null,\n          delete_node: false,\n          rename_node: false,\n          move_node: false,\n          start_drag: false\n        }\n      },\n      crrm: {\n        move: {\n          check_move: function(data) {\n            if (data.r.attr(\"id\") === \"tree-node-all\") {\n              return false;\n            } else {\n              return true;\n            }\n          }\n        }\n      },\n      cookies: {\n        save_selected: false\n      },\n      ui: {\n        select_limit: 1\n      },\n      hotkeys: {\n        del: false\n      },\n      themes: {\n        theme: \"default\",\n        dots: false,\n        icons: false\n      },\n      core: {\n        animation: 0,\n        initially_open: [\"tree-node-all\"]\n      },\n      search: {\n        search_method: \"jstree_contains_multi\",\n        show_only_matches: true\n      }\n    });\n    this.setListeners(homeViewCbk);\n    this.setSearchField();\n    __initSuggestionList = function(node) {\n      var child, object, _i, _len, _ref, _results;\n      _ref = node.children;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        child = _ref[_i];\n        object = {\n          type: \"folder\",\n          name: child.data\n        };\n        suggestionList.push(object);\n        _results.push(__initSuggestionList(child));\n      }\n      return _results;\n    };\n    __initSuggestionList(data);\n    suggestionList.sort(this._sortFunction);\n  }\n\n  /**\n  # Bind listeners given in parameters with comment events (creation,\n  # update, deletion, selection). Called by the constructor once.\n  */\n\n\n  Tree.prototype.setListeners = function(homeViewCbk) {\n    var jstreeEl, modalAlert, modalYesBtn, tree_buttons, tree_buttons_root, tree_buttons_target,\n      _this = this;\n    jstreeEl = this.jstreeEl;\n    tree_buttons = $(\"#tree-buttons\");\n    modalAlert = $('#myModal');\n    modalYesBtn = $(\"#modal-yes\");\n    tree_buttons_root = $(\"#tree-buttons-root\");\n    $(\"#tree-create\").tooltip({\n      placement: \"bottom\",\n      title: \"Add a note\"\n    });\n    $(\"#tree-create\").on(\"click\", function(event) {\n      var parent;\n      parent = this.parentElement.parentElement;\n      jstreeEl.jstree(\"create\", parent, 0, \"New note\");\n      $(this).tooltip('hide');\n      event.stopPropagation();\n      return event.preventDefault();\n    });\n    $(\"#tree-create-root\").tooltip({\n      placement: \"bottom\",\n      title: \"Add a note\"\n    });\n    $(\"#tree-create-root\").on(\"click\", function(event) {\n      var parent;\n      parent = this.parentElement.parentElement;\n      jstreeEl.jstree(\"create\", parent, 0, \"New note\");\n      $(this).tooltip('hide');\n      event.stopPropagation();\n      return event.preventDefault();\n    });\n    $(\"#tree-rename\").tooltip({\n      placement: \"bottom\",\n      title: \"Rename a note\"\n    });\n    $(\"#tree-rename\").on(\"click\", function(event) {\n      jstreeEl.jstree('rename', this.parentElement.parentElement);\n      $(this).tooltip('hide');\n      event.preventDefault();\n      return event.stopPropagation();\n    });\n    $(\"#tree-remove\").tooltip({\n      placement: \"bottom\",\n      title: \"Remove a note\"\n    });\n    $(\"#tree-remove\").on(\"click\", function(event) {\n      var nodeToDelete;\n      nodeToDelete = event.target.parentElement.parentElement.parentElement.parentElement;\n      $(event.target.parentElement).tooltip('hide');\n      modalAlert.modal('show');\n      modalYesBtn.unbind(\"click\");\n      modalYesBtn.on(\"click\", function() {\n        _this._recursiveRemoveSuggestionList(nodeToDelete);\n        if (nodeToDelete.id !== 'tree-node-all') {\n          jstreeEl.jstree(\"remove\", nodeToDelete);\n          return homeViewCbk.onRemove(nodeToDelete.id);\n        }\n      });\n      event.preventDefault();\n      return event.stopPropagation();\n    });\n    tree_buttons_target = $(\"#nav\");\n    this.widget.on(\"hover_node.jstree\", function(event, data) {\n      if (data.rslt.obj[0].id === \"tree-node-all\") {\n        tree_buttons_root.appendTo(data.args[0]);\n        return tree_buttons_root.css(\"display\", \"block\");\n      } else {\n        tree_buttons.appendTo(data.args[0]);\n        return tree_buttons.css(\"display\", \"block\");\n      }\n    });\n    this.widget.on(\"dehover_node.jstree\", function(event, data) {\n      if (data.rslt.obj[0].id === \"tree-node-all\") {\n        tree_buttons_root.css(\"display\", \"none\");\n        return tree_buttons_root.appendTo(tree_buttons_target);\n      } else {\n        tree_buttons.css(\"display\", \"none\");\n        return tree_buttons.appendTo(tree_buttons_target);\n      }\n    });\n    this.widget.on(\"create.jstree\", function(e, data) {\n      var nodeName, parentId;\n      nodeName = data.inst.get_text(data.rslt.obj);\n      parentId = data.rslt.parent[0].id;\n      _this._updateSuggestionList(\"create\", nodeName, null);\n      return homeViewCbk.onCreate(parentId, data.rslt.name, data);\n    });\n    this.widget.on(\"rename.jstree\", function(e, data) {\n      var newNodeName, oldNodeName;\n      newNodeName = data.rslt.new_name;\n      oldNodeName = data.rslt.old_name;\n      _this._updateSuggestionList(\"rename\", newNodeName, oldNodeName);\n      if (oldNodeName !== newNodeName) {\n        return homeViewCbk.onRename(data.rslt.obj[0].id, newNodeName);\n      }\n    });\n    this.widget.on(\"select_node.jstree\", function(e, data) {\n      var nodeName, note_uuid, parent, path;\n      note_uuid = data.rslt.obj[0].id;\n      if (note_uuid === \"tree-node-all\") {\n        path = \"/all\";\n      } else {\n        nodeName = data.inst.get_text(data.rslt.obj);\n        parent = data.inst._get_parent();\n        path = \"/\" + data.rslt.obj[0].id + _this._getSlugPath(parent, nodeName);\n      }\n      _this.currentPath = path;\n      _this.currentData = data;\n      _this.currentNote_uuid = note_uuid;\n      _this.jstreeEl[0].focus();\n      return homeViewCbk.onSelect(path, note_uuid, data);\n    });\n    this.widget.on(\"move_node.jstree\", function(e, data) {\n      var nodeId, targetNodeId;\n      nodeId = data.rslt.o[0].id;\n      targetNodeId = data.rslt.o[0].parentElement.parentElement.id;\n      return homeViewCbk.onDrop(nodeId, targetNodeId);\n    });\n    this.widget.on(\"loaded.jstree\", function(e, data) {\n      return homeViewCbk.onLoaded();\n    });\n    return this.onSearch = homeViewCbk.onSearch;\n  };\n\n  Tree.prototype.setSearchField = function() {\n    /**\n    #Autocompletion\n    */\n\n    var jstreeEl, searchField, searchFunction, textextWidget, _filterAutocomplete, _selectIcon,\n      _this = this;\n    this.searchField = $(\"#tree-search-field\");\n    searchField = this.searchField;\n    jstreeEl = this.jstreeEl;\n    this.searchField.blur(function() {\n      return jstreeEl.css(\"margin-top\", 10);\n    });\n    /*\n            # this function allow to select what appears in the suggestion list\n            # while the user type something in the search input\n            # input : array of suggestions, current string in the search input\n            # outputs : an array containing strings corresponding to suggestions\n            # depending on the searchstring\n    */\n\n    _filterAutocomplete = function(array, searchString) {\n      var expBold, expFirst, filtered, filteredFirst, isMatch, isMatchFirst, name, nameBold, regSentence, result, _i, _len;\n      filteredFirst = [];\n      filtered = [];\n      regSentence = \"\";\n      for (_i = 0, _len = array.length; _i < _len; _i++) {\n        name = array[_i];\n        expFirst = new RegExp(\"^\" + searchString, \"i\");\n        isMatchFirst = expFirst.test(name);\n        expBold = new RegExp(\"(\" + searchString + \")\", \"gi\");\n        isMatch = expBold.test(name);\n        if (isMatchFirst) {\n          nameBold = name.replace(expBold, function(match, pattern) {\n            return \"<span class='bold-name'>\" + match + \"</span>\";\n          });\n          filteredFirst.push(nameBold);\n        } else if (isMatch) {\n          nameBold = name.replace(expBold, function(match, pattern) {\n            return \"<span class='bold-name'>\" + match + \"</span>\";\n          });\n          if (!(__indexOf.call(filteredFirst, nameBold) >= 0) && !(__indexOf.call(filtered, nameBold) >= 0)) {\n            filtered.push(nameBold);\n          }\n        }\n      }\n      result = filteredFirst.concat(filtered);\n      return result;\n    };\n    /**\n    #used by textext to change the render of the suggestion list\n    #attach an icon to a certain type in the autocomplete list\n    #input : suggestion : a string which is the suggestion,\n    #array : the array is suggestionList containing all the suggestions\n    # possible and their nature\n    */\n\n    _selectIcon = function(suggestion, array) {\n      var i;\n      if (suggestion === (\"\\\"\" + (searchField.val()) + \"\\\"\")) {\n        return \"<i class='icon-search icon-suggestion'></i>\";\n      } else {\n        i = 0;\n        suggestion = suggestion.replace(/<.*?>/g, \"\");\n        while (i < array.length && suggestion !== array[i].name) {\n          i++;\n        }\n        if (i < array.length && array[i].type === \"folder\") {\n          return \"<i class='icon-folder-open icon-suggestion'></i>\";\n        }\n      }\n    };\n    /**\n    # treat the content of the input and launch the jstree search function\n    */\n\n    searchFunction = function(searchString) {\n      var string, _i, _len, _ref;\n      _ref = $(\".text-tag .text-label\");\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        string = _ref[_i];\n        searchString += \" \" + string.innerHTML;\n      }\n      return _this.onSearch(searchString);\n    };\n    /**\n    # Textext plugin is used to implement the autocomplete plugin Please\n    # visit http://textextjs.com/ for more information about this plugin\n    */\n\n    textextWidget = searchField.textext({\n      /**\n      #tags: add tags to the input\n      #prompt: print Search... in the input\n      #focus: change CSS when the input has the focus\n      #autocomplete: add a suggestion list to the input\n      */\n\n      plugins: 'tags prompt focus autocomplete',\n      prompt: 'Search...',\n      autocomplete: {\n        dropdownMaxHeight: '200px',\n        render: function(suggestion) {\n          return _selectIcon(suggestion, suggestionList) + suggestion;\n        }\n      },\n      /**\n      # ext allows to rewrite a textext functionality\n      */\n\n      ext: {\n        core: {\n          /**\n          # event that trigger when the content of the input is\n          # changing\n          */\n\n          onGetFormData: function(e, data, keyCode) {\n            var textInput;\n            textInput = this.input().val();\n            data[0] = {\n              'input': textInput,\n              'form': textInput\n            };\n            if (textInput === \"\") {\n              return searchFunction(\"\");\n            }\n          }\n        },\n        autocomplete: {\n          /**\n          # when the user click on a suggestion (text, bold, icon or\n          # blank spot) it adds a tag in the input\n          */\n\n          onClick: function(e) {\n            var self, target;\n            self = this;\n            target = $(e.target);\n            if (target.is('.text-suggestion') || target.is('.text-label') || target.is('.icon-suggestion') || target.is('.bold-name')) {\n              self.trigger('enterKeyPress');\n            }\n            if (self.core().hasPlugin('tags')) {\n              return self.val('');\n            }\n          }\n        },\n        itemManager: {\n          /**\n          #create an array with the \"name\" field of a suggestion list\n          */\n\n          nameField: function(array) {\n            var i, retArray, _i, _len;\n            retArray = [];\n            for (_i = 0, _len = array.length; _i < _len; _i++) {\n              i = array[_i];\n              retArray.push(i.name);\n            }\n            return retArray;\n          },\n          /**\n          # changing the content of a tag to avoid the view of\n          # balises in it\n          */\n\n          itemToString: function(item) {\n            if (/\".*\"/.test(item)) {\n              return item = item.replace(/\"(.*)\"/, function(str, p1) {\n                return p1;\n              });\n            } else {\n              return item = item.replace(/<.*?>/g, \"\");\n            }\n          }\n        },\n        tags: {\n          /**\n          # change the render of a tag in case the tag is referring\n          # to what the user is typing\n          */\n\n          renderTag: function(tag) {\n            var node;\n            node = $(this.opts('html.tag'));\n            node.find('.text-label').text(this.itemManager().itemToString(tag));\n            node.data('text-tag', tag);\n            return node;\n          }\n        }\n      }\n    });\n    textextWidget.bind('getSuggestions', function(e, data) {\n      var list, query, textext, treeHeight;\n      textext = $(e.target).textext()[0];\n      query = (data ? data.query : \"\") || \"\";\n      list = textext.itemManager().nameField(suggestionList);\n      list = _filterAutocomplete(list, query);\n      list = [\"\\\"\" + (searchField.val()) + \"\\\"\"].concat(list);\n      treeHeight = list.length * 12;\n      return $(this).trigger(\"setSuggestions\", {\n        result: list\n      });\n    });\n    return textextWidget.bind('isTagAllowed', function(e, data) {\n      jstreeEl.css(\"margin-top\", 10);\n      return searchFunction(data.tag);\n    });\n  };\n\n  Tree.prototype.addSearchTag = function(tag) {\n    return this.searchField.textext()[0].tags().addTags([tag]);\n  };\n\n  /**\n  #Select node corresponding to given path\n  #if note_uuid exists in the jstree it is selected\n  #otherwise if there is no seleted node, we select the root\n  */\n\n\n  Tree.prototype.selectNode = function(note_uuid) {\n    var node, tree;\n    node = $(\"#\" + note_uuid);\n    if (node.length === 0) {\n      this.homeViewCbk.onSelect('/', note_uuid, null);\n    }\n    if (node[0]) {\n      tree = this.jstreeEl.jstree(\"deselect_all\", null);\n      return tree = this.jstreeEl.jstree(\"select_node\", node);\n    } else if (!this.widget.jstree(\"get_selected\")[0]) {\n      return tree = this.jstreeEl.jstree(\"select_node\", \"#tree-node-all\");\n    }\n  };\n\n  /**\n   * Disable the hot key in jsTree, important when it is no longer the editor\n   * which listen to the keystokes\n  */\n\n\n  Tree.prototype.disable_hotkeys = function() {\n    return this.jstreeEl.jstree(\"disable_hotkeys\");\n  };\n\n  /**\n   * Enable the hot key in jsTree, important when it is the editor which\n   * listen to the keystokes\n  */\n\n\n  Tree.prototype.enable_hotkeys = function() {\n    return this.jstreeEl.jstree(\"enable_hotkeys\");\n  };\n\n  /**\n  # used by the .sort() method to be efficient with our structure\n  */\n\n\n  Tree.prototype._sortFunction = function(a, b) {\n    if (a.name > b.name) {\n      return 1;\n    } else if (a.name === b.name) {\n      return 0;\n    } else if (a.name < b.name) {\n      return -1;\n    }\n  };\n\n  /**\n  # this function remove the sons of a removed node in the suggestion list\n  */\n\n\n  Tree.prototype._recursiveRemoveSuggestionList = function(nodeToDelete) {\n    var node, _i, _len, _ref;\n    if (nodeToDelete.children[2] === void 0) {\n      console.log(nodeToDelete.children);\n    } else {\n      _ref = nodeToDelete.children[2].children;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        node = _ref[_i];\n        this._recursiveRemoveSuggestionList(node);\n      }\n    }\n    return this._updateSuggestionList(\"remove\", nodeToDelete.children[1].text.replace(/\\s/, \"\"), null);\n  };\n\n  /**\n  # this method update the array suggestionList when the user add, rename or remove\n  # a node\n  # input: action : neither create, rename or remove,\n  # nodeName : in case of create and remove : the name of the new note or the note to remove\n  # in case of rename : the new name of the note\n  # oldName : only for rename : the name that will be replaced in the note\n  # output : suggestionList updated\n  */\n\n\n  Tree.prototype._updateSuggestionList = function(action, newName, oldName) {\n    var i, object;\n    if (action === \"create\") {\n      object = {\n        type: \"folder\",\n        name: newName\n      };\n      suggestionList.push(object);\n      return suggestionList.sort(this._sortFunction);\n    } else if (action === \"rename\") {\n      i = 0;\n      while (i < suggestionList.length && suggestionList[i].name !== newName) {\n        i++;\n      }\n      if (suggestionList.length > i) {\n        suggestionList[i].name = newName;\n        return suggestionList.sort(this._sortFunction);\n      }\n    } else if (action === \"remove\") {\n      i = 0;\n      while (i < suggestionList.length && suggestionList[i].name !== newName) {\n        i++;\n      }\n      if (suggestionList.length > i) {\n        return suggestionList.splice(i, 1);\n      }\n    }\n  };\n\n  Tree.prototype._getPath = function(parent, nodeName) {\n    var name, nodes;\n    if (nodeName != null) {\n      nodes = [slugify(nodeName)];\n    }\n    name = \"all\";\n    while (name && parent !== void 0 && parent.children !== void 0) {\n      name = parent.children(\"a:eq(0)\").text();\n      nodes.unshift(slugify(name));\n      parent = parent.parent().parent();\n    }\n    return nodes;\n  };\n\n  Tree.prototype._getSlugPath = function(parent, nodeName) {\n    return this._getPath(parent, nodeName).join(\"/\");\n  };\n\n  return Tree;\n\n})();\n"]}