Debug = 0
maxDepth=4
limit = 4

lightgrey = #FDFDFD
softgrey = #DADADA
middlegrey = #3A3A3A
darkgrey = #525252
blue = #329ef7

@font-face
    font-family: main
    src: url('../fonts/signika-regular.ttf');

trueRank(depth)
    if maxDepth > limit
        min(depth, limit)
    else
        limit - maxDepth + depth

titleMixin(rank, type)
    padding-left unit(max(5, 20 * (rank - 1)+5), px)
    margin-left unit(0, px)
    if type == 1
        width 100%
        box-sizing border-box
        -moz-box-sizing border-box
        -webkit-box-sizing border-box
        font-weight: bold
        font-variant: small-caps
        font-size: 16px
        color: blue
        border-bottom: 1px solid softgrey
        margin-top: 4px
        margin-bottom: 5px
        padding-bottom: 0px
    else if type == 2
        margin-top 0px 
        font-weight: bold
        font-variant: small-caps
        font-size: 15px
        color: blue
        padding-bottom: 0px
    else if type == 3
        margin-top 0px 
        font-variant: small-caps
        color: blue
        font-style:italic
        font-weight: normal
        font-size: 15px
        padding-bottom: 0px
    else
        margin-top 0px 
        font-variant: small-caps
        color: blue
        font-style:italic
        font-weight: normal
        font-size: 15px
        padding-bottom: 0px
    if rank == 1
        counter-reset: section4
        counter-reset: section3
        counter-reset: section2
        counter-increment: section1
    else if rank == 2
        counter-reset: section4
        counter-reset: section3
        counter-increment: section2
    else if rank == 3
        counter-reset    : section4
        counter-increment: section3
    else if rank == 4
        counter-increment: section4

olMixin(rank)
    margin-left unit(20*rank, px)

ulMixin(rank)
    margin-left unit(20*rank, px)
    if rank <= 2
        margin-top unit(2, px)
    display list-item
    if rank % 2 == 1
        list-style-type disc
    else if rank % 2 == 0
        list-style-type square

titleLineMixin(rank)
    padding-left unit(max(5, 20 * (rank - 1)+5), px)

lineMixin(rank)
    padding-left unit(max(22, 20 * rank), px)


.Lh-1
    margin-top: 2px

#__ed-iframe-html
    background-color: lightgrey

// #editor-frame {
//   font-family: main;
//   overflow: auto;
//   box-sizing: border-box;
//   -moz-box-sizing: border-box;
//   position: relative;
//   left: 0px;
//   top: 0px;
//   color: #525252;
//   background-color: #fdfdfd;
//   line-height: 18px;
//   font: normal 13px/18px main, "Helvetica Neue", Arial, Helvetica, sans-serif;
//   font-family: main;

#editor-frame
    font-family: main
    position: absolute
    margin:0
    top:0
    right:0
    left:0
    bottom:0
    color: darkgrey
    background-color: lightgrey
    // line-height: 18px
    font: normal 13px/19px main, "Helvetica Neue", Arial, Helvetica, sans-serif
    font-family: main
    -moz-box-sizing : border-box
    box-sizing: border-box

#editor-lines
    -moz-box-sizing : border-box
    box-sizing: border-box
    font: normal 13px/18px main, "Helvetica Neue", Arial, Helvetica, sans-serif
    font-family: main
    color: darkgrey
    // overflow-y: auto
    padding-left:8px
    padding-right:8px
    // position: absolute
    // margin:0
    // top:0
    // right:0
    // left:0
    // bottom:0

p
    margin-top: 0px
    margin-bottom: 0px
    margin-left: 0px
    margin-right: 0px
    color: #333055

dl
    margin: 0
    padding: 0

dt
    margin: 0
    padding: 0

ul, ol
    margin: 3px 0 0 0
    padding: 0
    list-style-type: none

li
    margin: 0
    padding: 0
    list-style-type: circle
    
dd
    margin-left: 32px

num = (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)

for n in num
    .Th-{n}
        titleMixin(n, trueRank(n))
    .To-{n}
        olMixin(n)
        counter-increment list1
    .Tu-{n}
        ulMixin(n)
    .Lu-{n}
    .Lo-{n}
        lineMixin(n)
    .Lh-{n}
        titleLineMixin(n)
    if Debug == 1
        .Lu-{n}:before
        .Tu-{n}:before
        .Lo-{n}:before
        .To-{n}:before
        .Lh-{n}:before
        .Th-{n}:before
            content: attr(toDisplay)

/*
if Debug == 1
    .Th-1:before
        content: counter(section1) " " attr(toDisplay)
    .Th-2:before
        content: counter(section1) "." counter(section2) " " attr(toDisplay)
    .Th-3:before
        content: counter(section1) "." counter(section2) "." counter(section3) " " attr(toDisplay)
    .Th-4:before
        content: counter(section1) "." counter(section2) "." counter(section3) "." counter(section4) " " attr(toDisplay)
else
    .Th-1:before
        content: counter(section1) " "
    .Th-2:before
        content: counter(section1) "." counter(section2) " "
    .Th-3:before
        content: counter(section1) "." counter(section2) "." counter(section3) " "
    .Th-4:before
        content: counter(section1) "." counter(section2) "." counter(section3) "." counter(section4) " "
*/

